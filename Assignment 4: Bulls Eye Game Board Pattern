package assignment3;


import java.awt.Color;
import java.awt.Graphics;
import javax.swing.JPanel;
import java.security.SecureRandom;
//JPanel is the parent class of Class BullsEye. 
// class BullsEye inherits the properites of class JPanel. 
public class BullsEye extends JPanel 
{
      
      
    public void paintComponent(Graphics g)
        {
            super.paintComponent(g);
// Statement below creates a new object of the SecureRandom class. 
          
// Reference variable of SecureRandom class's object to access method nextInt.
// SecureRandom class is used to generate random number between 1-256 inclusive. 
            
// Two colors are needed to create Bulls Eye that alternates between two random colors. 
// Two new objects of the Color class are created and constructor accepts 3 parameters. 
// Each Color object will create a seperate color based on the parameter values. 
            
            SecureRandom randomNumber = new SecureRandom(); 
            
            int ranNum = 1 + randomNumber.nextInt(256);
            int ranNum2 = 1 + randomNumber.nextInt(256);
            int ranNum3 = 1 + randomNumber.nextInt(256);
            int ranNum4 = 1 + randomNumber.nextInt(256);
            int ranNum5 = 1 + randomNumber.nextInt(256);
            int ranNum6 = 1 + randomNumber.nextInt(256);
      
            Color color1 = new Color(ranNum, ranNum2, ranNum3);
            Color color2 = new Color(ranNum4, ranNum5, ranNum6);
            
            
            int centerX = getWidth() / 2;
            int centerY = getHeight() / 2;
// The above two statements are used to find the center of JPanel. 
// getWidth method and getHeight method belong to class JPanel. 
            int radius = 25; 
            for(int circle = 5; circle > 0; circle--) 
            {
                  
// Each circle drawn is filled with one of two colors. 
// The two if statements below allow adjacent(consecutive) circles to have different colors.                     
  
                    if (circle == 1 | circle == 3 | circle == 5)
                    { 
                        g.setColor(color1);
                        g.fillOval(centerX - (radius * circle), centerY - (radius * circle), radius * 2 * circle, radius * 2 * circle);
                    }
                    
                    
                    if (circle == 2 | circle == 4)
                    {
                        g.setColor(color2);
                        g.fillOval(centerX - (radius * circle), centerY - (radius * circle), radius * 2 * circle, radius * 2 * circle);
                    }
                    

                
                
        
            }
        }  
}

//The setColor method and fillOval method belong to the class Graphics.
// The last 2 parameters of the fillOval method represent the diameter of the circle. 
 
//The largest circle is drawn first.  
// The radius of the smallest circle is 25 pixels. The next biggest circle will have a radius of 50 and so on.  
// So the radius is increasing by 25 each time. 
                   
// All 5 circles will have different x and y coordinates for the upper left cornor of the bounding rectangle.  
// So the x and y coordinates are shifted by a uniform value each time. 
                    
// The location of x and y coordinates are in reference to center of JPanel. 
                    

